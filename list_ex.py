#list ≒ 배열
#리스트는 복합형 (리스트 +리스트도 가능함)


a=["hello", "I", "have", [1,"apple"]]
print(a[0])
print(a[3])
print(a[-1])
#2번 인덱싱 가능! 
print(a[-1][1])

#=====리스트 연산====
#리스트+ 하면 그냥 통합됨 
a=[1,2,3]
b=[4,5,6]
print(a+b)

#===리스트 추가====
a=[1,2,3,4,5]
a.append(6)
print(a)
a.append([7,8])
print(a)
a.insert(0,300)
#인설트는 인덱스로 넣을 수 있는데 
#어팬드는 인덱스로 넣을 수 없음!!! 
print(a)
#그래서 오류!! 
a.append(9)
print(a)


#===리스트 삭제====
del a[0]
print(a)

del a[3]
print(a)

#===리스트 수정====
a[0]=0
print(a)
print("**")
for i in a:
    print(i, end="")

print("***")
a=[1,2,3,[4,5,6,7,8]]
print(len(a[3]))

#=====sort====
a=[1,2,3,0]
a.sort()
print(a)
a.reverse()
print(a)

#====튜플=====
#()로 사용 수정,삭제,추가 불가능 
#FINAL 같은 건가봐 묶어나 버렸네(불변 데이터) 
# 튜플은 일반적으로 목록보다 메모리 효율적이고 처리 속도가 빠릅니다. 
#변경되지 않는 값 모음이 있는 경우 목록 대신 튜플을 사용하면 성능이 약간 향상될 수 있습니다.

t=1,2,3
print(t)
t1=(1,)
print(t1)

#=====딕셔너리=====
#키:벨류값으로 전달 {} 형태 

#====연습문제2 5/23======
# 코드를 올바르게 작성 2가지 방식으로 수정
# print("He said, "Don't worry my friend"")
print("He said, \"Don\'t worry my friend\"")

#====연습문제3 5/23======
# a 변수 이용 아래와 같이 출력되도록 2가시 방식 코드 작성 한줄로
a="안녕하세요 \n반갑습니다"
b="""안녕하세요
반갑습니다"""
#""" 세개를 쓰면 보이는 그대로 출력 
print(a)
print(b)


#====연습문제4 5/23======
# ab를 2가지 방식으로 아래와 같이 출력 코드 한줄로 작성
a="안녕하세요"
b="반갑습니다"
print(a,b)
print(a+" "+b)
print(f"{a} {b}")

#====연습문제5 5/23======
# a의 문자열 길이를 구하시오
a="abcdef"
print("문자열의 길이",len(a))

#====연습문제6 5/23======
# a를 모두 d로 변경 
a="abaa"
#리플레이스는 원본을 수정하지 않고 새로운 리턴값을 보내줌 
b=a.replace("a","d")
print(b)

#====연습문제7 5/23======
# 문자열 슬라이싱을 이용 하여 앞에 6 뒤에 6 추출, 다른변수에 할당하고 반대로 출력하시오
a="111111-222222"
b=a[:6]
#뒤에를 공란으로 사용하면 무조건 끝에 있는 문자열까지 가지고 와라 
c=a[7:]
print(f"{c}-{b}")

#====연습문제8 5/23======
# 가장 마지막에 있는 문자열 추출 
a="12345678"
print(a[-1])

#====연습문제10 5/23======
# typeE_ 코드를올바르게 수정 
a="moring"
b=7
print("It's %d in the %s"%(b,a))

#====연습문제11 5/23======
# 문자열 포맷팅하여 2가지 방법으로 출력 
a="appples"
b=2
c="He said, \"I've got {} {}.\"".format(b,a)
print(f"He, sad\"I've got {b} {a}\"")
print(c)

#====연습문제12 5/23======
# 소문자 → 대문자 / 대문자 → 소문자 
a="appleS"
print(a.lower())
print(a.upper())

#====연습문제13 5/23======
# 제대로 바뀌었는지 확인하는 코드 작성
lower=a.lower()
upper=a.upper()
if lower.islower():
    print(a.lower(), "소문자로 변경하였습니다.")
    
else:
    print(a.upper(), "대문자로 변경하였습니다.")
    
#====연습문제15 5/23(14패스)======
# [1,"apple"]을 추출하여 출력하는 코드 작성
a=["hello","I","have", [1,"apple"]]
print(a[3])

#====연습문제16 5/23(14패스)======
# apple만 출력
print(a[3][1])


#====연습문제17 5/23(14패스)======
# 2개의 리스트자료를 합하여 변수 c에 할당한 후 모든 요소의 개수를 출력 
a=[1,2,3]
b=[4,5,6]
c=a+b
print(len(c), c)

#====연습문제18 5/23(14패스)======
# 리스트의 1요소에 값을 5로 변경, 이후 세번째 요소 값을 삭제 
a=[1,2,3,4,5]
#인덱스 0으로 접근하고 값 할당함
a[0]=5
#3값이니까 인덱스 2로 접근 
del a[2]
print(a)

#====연습문제19 5/23(14패스)======
# 리스트에 마지막에 6을 추가하는 코드 작성, 이후 2, 3에 300을 삽입
a=[1,2,3,4,5]
a.append(6)
print(a)
a.insert(1,300)
print(a)
a.insert(2,300)
print(a)

#====연습문제20 5/23(14패스)======
# 리스트 숫자를 오름차순정렬 후 내림차순
a=[5,3,4,1,2]
a.sort()
print(a)
a.reverse()
print(a)

#====연습문제21 5/23(14패스)======
# 가장 높은 값과 낮은 값 출력 
a=[1000,200,300,400,500]
a.sort()
print(a[-1], a[0])

#====연습문제22 5/23(14패스)======
#index()함수: 특정 값을 인자로 전달하면 해당 값의 인덱스를 찾아 리턴값을
# max(), min(), index() 함수를 사용 a에 할당된 리스트 숫자중 
# 가장 높은 값이 몇번 째 요소에 할당 검색
a=[1000,200,300,400,500]
print(max(a),"인덱스",a.index(max(a)))
print(min(a),"인덱스",a.index(min(a)))

#금요일부터 실습 들어갈 수 있음(개인과제 제출) 
#코드를 공유하는 것 각 사이트마다 2명씩 랜덤으로 할당 
#함수까지 배운 후 진행 같은 사이트 이지만, 각 코드하게 됨 
#함수로 랜덤추출기 만들어서 그 자리에서 바로 결정


